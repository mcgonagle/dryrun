  apiVersion: networking.k8s.io/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/force-ssl-redirect":"true","nginx.ingress.kubernetes.io/ssl-redirect":"true"},"labels":{"app":"spin","cluster":"spin-ingress"},"name":"spin-ingress","namespace":"spinnaker"},"spec":{"rules":[{"host":"test.personalread.me","http":{"paths":[{"backend":{"serviceName":"spin-deck","servicePort":9000},"path":"/"}]}},{"host":"test.personalread.me","http":{"paths":[{"backend":{"serviceName":"spin-gate","servicePort":8084},"path":"/api/v1"}]}}],"tls":[{"hosts":["test.personalread.me"],"secretName":"tls-secret"}]}}
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    labels:
      app: spin
      cluster: spin-ingress
    name: spin-ingress
    namespace: spinnaker
  spec:
    rules:
    - host: "test.personalread.me"
      http:
        paths:
        - backend:
            serviceName: spin-deck
            servicePort: 9000
          path: /
    - host: "test.personalread.me"
      http:
        paths:
        - backend:
            serviceName: spin-gate
            servicePort: 8084
          path: /api/v1
    tls:
    - hosts:
      - "test.personalread.me"
      secretName: tls-secret